include ../parts/mixins

.mdl-grid
  - cardSettings = { phone: { s: 4 }, tablet: { s: 4, o: 2 }, desktop: { s: 4, o: 4 } }
  
  if query_params.error
    +MessageCard(cardSettings, 'Ошибка при создании пользователя', query_params.error)
  
  - var selected_type = query_params.user_type || query_params.type || 'student';

  - var post_url = '/a/' + options.entityNamePlural + (edit_mode ? ('/' + query_params.id + '/edit') : '/create')
  +Form(cardSettings, 'createuserform', post_url)
    +InputField('Имя', 'firstname', true)
    br
    +InputField('Фамилия', 'lastname')
    br
    +InputField('Отчество', 'middlename')
    br
    +InputField('Логин', 'login')
    br
    br
    if !edit_mode
      +RadioButton('Студент', 'user_type', 'student', (selected_type=='student'), user_type_block_style)
      br
      br
      +RadioButton('Преподаватель', 'user_type', 'teacher', (selected_type=='teacher'), user_type_block_style)
      br
      br
      +RadioButton('Администратор', 'user_type', 'admin', (selected_type=='admin'), user_type_block_style)
      br
      br
    #student-fields-wrapper(style= (selected_type=='student') ? '' : 'display: none;')
      +ComboBox('Группа', 'groupId', lists.groups, false, null, query_params.student ? query_params.student.groupId : null)
    #teacher-fields-wrapper(style= (selected_type=='teacher') ? '' : 'display: none;')
      +Toggle('canCreateNews', 'Может создавать новости', '', query_params.teacher ? query_params.teacher.canCreateNews : false)
      br
      br
      +Toggle('canEditTimetable', 'Может править расписание', '', query_params.teacher ? query_params.teacher.canEditTimetable : false)
    #admin-fields-wrapper(style= (selected_type=='admin') ? '' : 'display: none;')

script.
  var studentRadio = document.getElementById('student_radio'),
      teacherRadio = document.getElementById('teacher_radio'),
      adminRadio   = document.getElementById('admin_radio');

  var studentFieldsWrapper = document.getElementById('student-fields-wrapper'),
      teacherFieldsWrapper = document.getElementById('teacher-fields-wrapper'),
      adminFieldsWrapper   = document.getElementById('admin-fields-wrapper');

  function onUserTypeChange() {
    studentFieldsWrapper.style.display = studentRadio.checked ? 'block' : 'none' ;
    teacherFieldsWrapper.style.display = teacherRadio.checked ? 'block' : 'none' ;
    adminFieldsWrapper.style.display   = adminRadio.checked ? 'block' : 'none' ;
  }

  studentRadio.onchange = onUserTypeChange;
  teacherRadio.onchange = onUserTypeChange;
  adminRadio.onchange   = onUserTypeChange;


script.
  var loginEdited = false;
  var firstname      = document.getElementById('firstnamefield');
  var lastname       = document.getElementById('lastnamefield');
  var login          = document.getElementById('loginfield');
  var loginContainer = document.getElementById('loginfield_container');
  
  firstname.oninput = generateLogin;
  lastname.oninput  = generateLogin;
  login.oninput     = function () { loginEdited = true; };

  function generateLogin() {
    if (!login.value) loginEdited = false;
    if (!firstname.value || !lastname.value || loginEdited) return;

    loginContainer.classList.add('is-dirty');
    login.value = Transliterate(firstname.value) + '.' + Transliterate(lastname.value);
  }

  function Transliterate (text) {		
      return text.replace(/([а-яё])|([\s_-])|([^a-z\d])/gi,		
        function (all, ch, space, words, i) {		
            if (space || words) {		
                return space ? '-' : '';		
            }		
            var code = ch.charCodeAt(0),		
                index = code == 1025 || code == 1105 ? 0 :		
                    code > 1071 ? code - 1071 : code - 1039,		
                t = ['yo', 'a', 'b', 'v', 'g', 'd', 'e', 'zh',		
                    'z', 'i', 'y', 'k', 'l', 'm', 'n', 'o', 'p',		
                    'r', 's', 't', 'u', 'f', 'kh', 'c', 'ch', 'sh',		
                    'shch', '', 'y', '', 'e', 'yu', 'ya'		
                ];		
            return t[index];		
        });		
    };
  